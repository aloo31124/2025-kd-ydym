{
  "builds": {
    "web": {
      "default": true
    },
    "native": {
      "packager": "cordova",
      "cordova": {
        "config": {
          // Uncomment the line below and add the platforms you wish to build for
          //"platforms": "ios android",
          "platforms": "ios",
          "id": "com.kangdainfo.oa",
          "name": "oa",
          "deviceType": "iPad"
        }
      }
    }
  },

//  "testing": {
//      "output": {
//        "base": "/Users/apple/touch/build/offline/oa"
//      }
//    },

  /**
   * The application's namespace, used by Sencha Command to generate classes
   */
  "name": "oa",
  /**
   * The file path to this application's front HTML document, relative to this app.json file
   */
  "indexHtmlPath": "index.html",
  /**
   * The Sencha Framework for this application: "ext" or "touch".
   */
  "framework": "touch",
  /**
   * The absolute URL to this application in development environment, i.e: the URL to run this application
   * on your web browser during development, e.g: "http://localhost/myapp/index.html".
   *
   * This value is needed when build to resolve your application's dependencies if it requires server-side resources
   * that are not accessible via file system protocol.
   */
  "url": null,
  /**
   * List of all JavaScript assets in the right execution order.
   * Each item is an object with the following format:
   *      {
   *          "path": "path/to/script.js" // Path to file, if local file it must be relative to this app.json file
   *          "remote": true              // (Optional)
   *                                      // - Defaults to undefined (falsey) to signal a local file which will be copied
   *                                      // - Specify true if this file is a remote file which will not to be copied
   *          "update": "delta"           // (Optional)
   *                                      //  - If not specified, this file will only be loaded once, and
   *                                      //    cached inside localStorage until this value is changed.
   *                                      //  - "delta" to enable over-the-air delta update for this file
   *                                      //  - "full" means full update will be made when this file changes
   *          "x-bootstrap": true         // (Optional)
   *                                      // Indicates a development mode only dependency.
   *                                      // These files will not be copied into the build directory or referenced
   *                                      // in the generate app.json manifest for the micro loader.
   *
   *      }
   */
  "js": [
    {
      "path": "resources/thirdparty/pace/pace.min.js"
    },
    {
      "path": "kdconfig.js"
    },
    {
      "path": "resources/js/custom.js"
    },
    {
      "path": "../sencha-touch-all-debug.js",
      "x-bootstrap": true
    },
    {
      "path": "bootstrap.js",
      "x-bootstrap": true
    },
    {
      "path": "app.js",
      "bundle": true,
      "update": "delta"
    },
    {
      "path": "resources/thirdparty/joint-0.9.7/lib/jquery.min.js"
    },
    {
      "path": "resources/thirdparty/qtip/jquery.qtip.js"
    },
    {
      "path": "resources/thirdparty/joint-0.9.7/lib/lodash.min.js"
    },
    {
      "path": "resources/thirdparty/joint-0.9.7/lib/backbone-min.js"
    },
    {
      "path": "resources/thirdparty/joint-0.9.7/dist/joint.js"
    },
    //        {
    //            "path": "resources/thirdparty/joint-0.9.10/dist/joint.shapes.uml.js"
    //        },
    {
      "path": "resources/thirdparty/method-draw/src/browser.js"
    },
    {
      "path": "resources/thirdparty/method-draw/src/svgtransformlist.js"
    },
    {
      "path": "resources/thirdparty/method-draw/src/math.js"
    },
    {
      "path": "resources/thirdparty/method-draw/src/units.js"
    },
    {
      "path": "resources/thirdparty/method-draw/src/svgutils.js"
    },
    {
      "path": "resources/thirdparty/method-draw/src/sanitize.js"
    },
    {
      "path": "resources/thirdparty/method-draw/src/history.js"
    },
    {
      "path": "resources/thirdparty/method-draw/src/select.js"
    },
    {
      "path": "resources/thirdparty/method-draw/src/draw.js"
    },
    {
      "path": "resources/thirdparty/method-draw/src/path.js"
    },
    {
      "path": "resources/thirdparty/method-draw/lib/jgraduate/jquery.jgraduate.js"
    },
    {
      "path": "resources/thirdparty/method-draw/src/svgcanvas.js"
    },
    //rgbcolor
    {
      "path": "resources/thirdparty/method-draw/lib/canvg/rgbcolor.js"
    },
    {
      "path": "resources/thirdparty/method-draw/lib/canvg/canvg.js"
    },
    {
      "path": "resources/thirdparty/jQuery-contextMenu/dist/jquery.contextMenu.min.js"
    },
    //jsSHA
    {
      "path": "resources/thirdparty/jsSHA/src/sha1.js"
    },
    //resumablejs
    {
      "path": "resources/thirdparty/resumablejs/resumable.js"
    },
    //xml to json
    {
      "path": "resources/thirdparty/xml2json/xml2json.js"
    },
    {
      "path": "resources/thirdparty/xml2json/json2xml.js"
    },
    {
      "path": "resources/thirdparty/Blob/Blob.js"
    },
    {
      "path": "resources/thirdparty/FileSaver/FileSaver.js"
    },
    {
      "path": "resources/thirdparty/FileSaver/canvas-toBlob.js"
    },
    //barcode
    {
      "path": "resources/thirdparty/JsBarcode/JsBarcode.js"
    },
    {
      "path": "resources/thirdparty/JsBarcode/CODE128.js"
    },
    //        {
    //            "path": "resources/thirdparty/socket.io-client/socket.io.js"
    //        },
    {
      "path": "resources/thirdparty/fastdom/fastdom.min.js"
    },
    {
      "path": "resources/thirdparty/localForage/dist/localforage.min.js"
    },
    {
      "path": "resources/thirdparty/sqljs/js/sql.js"
    },
    {
      "path": "resources/thirdparty/fabric/dist/fabric.min.js"
    },
    {
      "path": "resources/thirdparty/canvas-to-tiff/dist/canvastotiff.min.js"
    },
    {
      "path": "resources/thirdparty/jsPDF/dist/jspdf.min.js"
    },
    {
      "path": "resources/thirdparty/keymaster/keymaster.js"
    },
    {
      "path": "resources/thirdparty/PapaParse/papaparse.min.js"
    },
    {
      "path": "resources/thirdparty/jszip/dist/jszip.min.js"
    },
    {
      "path": "resources/thirdparty/jszip-utils/dist/jszip-utils.min.js"
    },
    {
      "path": "resources/thirdparty/diff-match-patch-master/javascript/diff_match_patch_uncompressed.js"
    },
	{
      "path": "resources/thirdparty/encoding/encoding.min.js"
    }
  ],
  /**
   * List of all CSS assets in the right inclusion order.
   * Each item is an object with the following format:
   *      {
   *          "path": "path/to/item.css" // Path to file, if local file it must be relative to this app.json file
   *          "remote": true             // (Optional)
   *                                     // - Defaults to undefined (falsey) to signal a local file which will be copied
   *                                     // - Specify true if this file is a remote file which will not to be copied
   *          "update": "delta"          // (Optional)
   *                                     //  - If not specified, this file will only be loaded once, and
   *                                     //    cached inside localStorage until this value is changed to either one below
   *                                     //  - "delta" to enable over-the-air delta update for this file
   *                                     //  - "full" means full update will be made when this file changes
   *
   *      }
   */
  "css": [
    {
      "path": "resources/thirdparty/pace/pace-theme-loading-bar.css"
    },
    // sencha touch theme
    {
      "path": "../resources/css/sencha-touch.css",
      "platform": [
        "desktop",
        "ios",
        "android"
      ]
    },
    {
      "path": "resources/thirdparty/TouchCalendar/resources/css/Ext.ux.TouchCalendarView.css"
    },
    {
      "path": "resources/thirdparty/qtip/jquery.qtip.css"
    },
    {
      "path": "resources/thirdparty/joint-0.9.7/dist/joint.css"
    },
    {
      "path": "resources/css/TouchTreeGrid.css"
    },
    {
      "path": "resources/css/custom.css"
    },
    {
      "path": "resources/thirdparty/jQuery-contextMenu/dist/jquery.contextMenu.min.css"
    }
  ],
  /**
   * Used to automatically generate cache.manifest (HTML 5 application cache manifest) file when you build
   */
  "appCache": {
    /**
     * List of items in the CACHE MANIFEST section
     */
    "cache": [
      "index.html"
    ],
    /**
     * List of items in the NETWORK section
     */
    "network": [
      "*"
    ],
    /**
     * List of items in the FALLBACK section
     */
    "fallback": []
  },
  /**
   * Extra resources to be copied along when build
   */
  "resources": [
    "resources/images",
    "resources/icons",
    "resources/startup"
  ],
  /**
   * File / directory name matchers to ignore when copying to the builds, must be valid regular expressions
   */
  "ignore": [
  ],
  /**
   * Directory path to store all previous production builds. Note that the content generated inside this directory
   * must be kept intact for proper generation of deltas between updates
   */
  "archivePath": "archive",
  /**
   * List of package names to require for the cmd build process
   */
  "requires": [
  ],
  /**
   * Controls for localStorage caching
   *   "cache": {
   *       // This property controls whether localStorage caching of this manifest file is on or off.
   *       // if disabled no deltas will be generated during a build and full updates will be disabled
   *       "enable": false,
   *
   *       // This property allows for global toggle of deltas.
   *       // If set to a string the value will be used as the path to where deltas will be generated relative to you build.
   *       // If set to a Truthy Value the default path ok "deltas" will be used
   *       // If set to a Falsey value or if this property is not present deltas will be disabled and not generated.
   *       //
   *       "deltas": "deltas"
   *   }
   */
  "cache": {
    "enable": false,
    "deltas": "deltas"
  },
  "loader": {
    "cache": "${build.timestamp}",
    "cacheParam": "_dc"
  },
  /**
   * Uniquely generated id for this application, used as prefix for localStorage keys.
   * Normally you should never change this value.
   */
  "id": "fd251b31-c436-4458-b377-4bc0cc0cf101"
}
